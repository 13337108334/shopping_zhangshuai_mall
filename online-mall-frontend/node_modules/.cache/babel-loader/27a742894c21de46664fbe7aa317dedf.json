{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"GoodView\",\n  data: function data() {\n    return {\n      baseApi: this.$store.state.baseApi,\n      good: {},\n      goodId: Number,\n      price: -1,\n      isDiscount: false,\n      discount: \"\",\n      standards: [],\n      checkedStandard: \"\",\n      store: 0,\n      showStore: false,\n      count: 1\n    };\n  },\n  methods: {\n    getPriceRange: function getPriceRange(standards) {\n      var arr = standards.map(function (item) {\n        return item.price;\n      }); //选择排序\n\n      for (var i = 0; i < arr.length; i++) {\n        // 第一次循环，假设第一个值为最小值，后面i++依此类推\n        var min = i;\n\n        for (var j = i + 1; j < arr.length; j++) {\n          // 将第一个值循环与后面的值比较，如果后面的值比第一个值小，则将索引赋值给min，直到找到最小值\n          if (arr[j] < arr[min]) {\n            min = j;\n          }\n        }\n\n        var _ref = [arr[min], arr[i]];\n        arr[i] = _ref[0];\n        arr[min] = _ref[1];\n      }\n\n      if (arr[0] === arr[arr.length - 1]) {\n        return arr[0];\n      } else {\n        return arr[0] + \"元 ~ \" + arr[arr.length - 1];\n      }\n    },\n    change: function change(standard) {\n      this.showStore = true;\n      this.price = standard.price;\n      this.store = standard.store;\n    },\n    goToOrder: function goToOrder() {\n      if (this.standards.length !== 0) {\n        if (this.checkedStandard === \"\") {\n          this.$message.warning(\"请选择规格\");\n          return false;\n        }\n      }\n\n      this.$router.push({\n        name: \"preOrder\",\n        query: {\n          good: JSON.stringify(this.good),\n          realPrice: this.realPrice,\n          num: this.count,\n          standard: this.checkedStandard\n        }\n      });\n    },\n    addToCart: function addToCart() {\n      var _this = this;\n\n      //未登录，拦截\n      if (!localStorage.getItem(\"user\")) {\n        this.$router.push(\"/login\");\n      }\n\n      if (!this.checkedStandard) {\n        this.$message.error(\"请选择规格\");\n        return false;\n      } // 从服务器获取当前用户的id，保证安全\n\n\n      this.request.get(\"/userid\").then(function (res) {\n        var userId = res;\n        var cart = {\n          userId: userId,\n          goodId: _this.goodId,\n          standard: _this.checkedStandard,\n          count: _this.count\n        };\n\n        _this.request.post(\"/api/cart\", cart).then(function (res) {\n          if (res.code === \"200\") {\n            _this.$message.success(\"成功添加购物车\");\n          }\n        });\n      });\n    }\n  },\n  created: function created() {\n    var _this2 = this;\n\n    //初始化商品信息\n    // this.good = JSON.parse(this.$route.query.good)\n    this.goodId = this.$route.params.goodId;\n    this.request.get(\"/api/good/\" + this.goodId).then(function (res) {\n      if (res.code === \"200\") {\n        _this2.good = res.data;\n        var discount = _this2.good.discount;\n\n        if (discount < 1) {\n          _this2.isDiscount = true;\n          _this2.discount = discount * 10 + \"折\";\n        }\n      } else {\n        _this2.$router.go(0);\n      }\n    }); //从服务器获取商品规格信息\n\n    this.request.get(\"/api/good/standard/\" + this.goodId).then(function (res) {\n      if (res.code === \"200\") {\n        var standards = JSON.parse(res.data);\n        _this2.standards = standards; //默认选择第一个标准\n\n        _this2.price = _this2.getPriceRange(standards);\n      } else {\n        //没有规格\n        _this2.price = _this2.good.price;\n        _this2.store = _this2.good.store;\n        _this2.showStore = true;\n      }\n    });\n  },\n  mounted: function mounted() {},\n  computed: {\n    //折后价，小数点后2位\n    realPrice: function realPrice() {\n      if (this.good.discount < 1) {\n        //价格为范围，即不是数字，则返回一个范围\n        if (isNaN(this.price)) {\n          var down = this.price.substring(0, this.price.indexOf(\"元\")) * this.good.discount;\n          var up = this.price.substring(this.price.lastIndexOf(\" \")) * this.good.discount;\n          return down.toFixed(2) + \"元 ~ \" + up.toFixed(2);\n        } else {\n          return (this.price * this.good.discount).toFixed(2);\n        }\n      }\n\n      return this.price;\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA;AACAA,kBADA;AAEAC,MAFA,kBAEA;AACA;AACAC,wCADA;AAEAC,cAFA;AAGAC,oBAHA;AAIAC,eAJA;AAKAC,uBALA;AAMAC,kBANA;AAOAC,mBAPA;AAQAC,yBARA;AASAC,cATA;AAUAC,sBAVA;AAWAC;AAXA;AAaA,GAhBA;AAiBAC;AACAC,iBADA,yBACAN,SADA,EACA;AACA;AACA;AACA,OAFA,EADA,CAIA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACAO;AACA;AACA;;AARA,mBASA,kBATA;AASAC,cATA;AASAA,gBATA;AAUA;;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA,KAtBA;AAuBAC,UAvBA,kBAuBAC,QAvBA,EAuBA;AACA;AACA;AACA;AACA,KA3BA;AA4BAC,aA5BA,uBA4BA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACAnB,wBADA;AAEAoB;AACAjB,yCADA;AAEAkB,mCAFA;AAGAC,yBAHA;AAIAJ;AAJA;AAFA;AASA,KA5CA;AA6CAK,aA7CA,uBA6CA;AAAA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA,OARA,CASA;;;AACA;AACA;AACA;AACAC,wBADA;AAEApB,8BAFA;AAGAc,yCAHA;AAIAN;AAJA;;AAMA;AACA;AACA;AACA;AACA,SAJA;AAKA,OAbA;AAcA;AArEA,GAjBA;AAyFAa,SAzFA,qBAyFA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA,OAPA,MAOA;AACA;AACA;AACA,KAXA,EAJA,CAgBA;;AACA;AACA;AACA;AACA,qCAFA,CAGA;;AACA;AACA,OALA,MAKA;AACA;AACA;AACA;AACA;AACA;AACA,KAZA;AAaA,GAvHA;AAwHAC,SAxHA,qBAwHA,EAxHA;AAyHAC;AACA;AACAN;AACA;AACA;AACA;AACA,qBACA,mDACA,kBAFA;AAGA,mBACA,oDACA,kBAFA;AAGA;AACA,SARA,MAQA;AACA;AACA;AACA;;AACA;AACA;AAlBA;AAzHA","names":["name","data","baseApi","good","goodId","price","isDiscount","discount","standards","checkedStandard","store","showStore","count","methods","getPriceRange","min","arr","change","standard","goToOrder","query","realPrice","num","addToCart","userId","created","mounted","computed"],"sourceRoot":"src/views/front/good","sources":["GoodView.vue"],"sourcesContent":["<!--\n *  商品详情页面\n *\n<<<<<<< HEAD\n * @author: ZhangDaYe\n=======\n * @Author: ShanZhu\n>>>>>>> origin/feature_2024_08_24\n * @Date: 2023-11-11\n-->\n<template>\n  <div class=\"main-box\">\n    <div>\n\n      <!--左侧的图片-->\n      <div class=\"image-box\">\n        <img :src=\"baseApi + good.imgs\" class=\"image\" />\n      </div>\n\n      <!--右侧盒子-->\n      <div class=\"detail-box\">\n\n        <!--品名与描述-->\n        <div>\n          <span style=\"font-size: 22px\"\n            ><strong>{{ good.name }}</strong></span\n          ><br />\n        </div>\n        <div style=\"margin-top: 20px\">\n          <span style=\"font-size: 17px;\">{{\n            good.description\n          }}</span>\n        </div>\n\n        <!--价格盒子-->\n        <div class=\"price-box\" v-if=\"good.discount < 1\">\n          <dl>\n            <div>\n              <dt>原价</dt>\n              <dd style=\"text-decoration: line-through\"><b>{{ price }}</b>元</dd>\n            </div>\n            <div>\n              <dt>折扣</dt>\n              <dd>{{ discount }}</dd>\n            </div>\n            <div>\n              <dt>现价</dt>\n              <dd style=\"color: red; font-size: 25px\"><b>{{ realPrice }}</b>元</dd>\n            </div>\n          </dl>\n        </div>\n        <div class=\"price-box\" v-if=\"good.discount === 1\">\n          <dl>\n            <div>\n              <dt>价格</dt>\n              <dd style=\"color: red; font-size: 25px\">￥ <b>{{ price }}</b></dd>\n            </div>\n          </dl>\n        </div>\n\n        <!--月销量-->\n        <div style=\"margin-top: 20px\">\n          <span>月销量：</span>\n          <span>{{ good.sales }}</span\n          ><br />\n          <span style=\"height: 40px\" v-if=\"showStore\">库存：{{ store }}</span>\n        </div>\n\n        <!--选择规格-->\n        <div\n          style=\"margin-top: 15px; height: 50px\"\n          v-if=\"standards.length !== 0\"\n        >\n          <el-radio-group\n            v-for=\"(standard, index) in standards\"\n            v-model=\"checkedStandard\"\n            @change=\"change(standard)\"\n            :key=\"index\"\n          >\n            <el-radio-button\n              class=\"standard\"\n              :label=\"standard.value\"\n            ></el-radio-button>\n          </el-radio-group>\n        </div>\n\n        <!--选择数量-->\n        <div style=\"margin-top: 20px\">\n          <el-input-number\n            v-model=\"count\"\n            controls-position=\"right\"\n            :min=\"1\"\n            :max=\"store\"\n          ></el-input-number>\n        </div>\n\n        <!--购买按钮组-->\n        <div style=\"margin-top: 30px\">\n          <el-button type=\"success\" @click=\"goToOrder\">购买</el-button>\n          <el-button type=\"primary\" @click=\"addToCart\" icon=\"el-icon-shopping-cart-1\">加入购物车</el-button>\n        </div>\n\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: \"GoodView\",\n  data() {\n    return {\n      baseApi: this.$store.state.baseApi,\n      good: {},\n      goodId: Number,\n      price: -1,\n      isDiscount: false,\n      discount: \"\",\n      standards: [],\n      checkedStandard: \"\",\n      store: 0,\n      showStore: false,\n      count: 1,\n    };\n  },\n  methods: {\n    getPriceRange(standards) {\n      let arr = standards.map((item) => {\n        return item.price;\n      });\n      //选择排序\n      for (let i = 0; i < arr.length; i++) {\n        // 第一次循环，假设第一个值为最小值，后面i++依此类推\n        let min = i;\n        for (let j = i + 1; j < arr.length; j++) {\n          // 将第一个值循环与后面的值比较，如果后面的值比第一个值小，则将索引赋值给min，直到找到最小值\n          if (arr[j] < arr[min]) {\n            min = j;\n          }\n        }\n        [arr[i], arr[min]] = [arr[min], arr[i]];\n      }\n      if (arr[0] === arr[arr.length - 1]) {\n        return arr[0];\n      } else {\n        return arr[0] + \"元 ~ \" + arr[arr.length - 1];\n      }\n    },\n    change(standard) {\n      this.showStore = true;\n      this.price = standard.price;\n      this.store = standard.store;\n    },\n    goToOrder() {\n      if (this.standards.length !== 0) {\n        if (this.checkedStandard === \"\") {\n          this.$message.warning(\"请选择规格\");\n          return false;\n        }\n      }\n      this.$router.push({\n        name: \"preOrder\",\n        query: {\n          good: JSON.stringify(this.good),\n          realPrice: this.realPrice,\n          num: this.count,\n          standard: this.checkedStandard,\n        },\n      });\n    },\n    addToCart() {\n      //未登录，拦截\n      if (!localStorage.getItem(\"user\")) {\n        this.$router.push(\"/login\");\n      }\n      if (!this.checkedStandard) {\n        this.$message.error(\"请选择规格\");\n        return false;\n      }\n      // 从服务器获取当前用户的id，保证安全\n      this.request.get(\"/userid\").then((res) => {\n        let userId = res;\n        let cart = {\n          userId: userId,\n          goodId: this.goodId,\n          standard: this.checkedStandard,\n          count: this.count,\n        };\n        this.request.post(\"/api/cart\", cart).then((res) => {\n          if (res.code === \"200\") {\n            this.$message.success(\"成功添加购物车\");\n          }\n        });\n      });\n    },\n  },\n\n  created() {\n    //初始化商品信息\n    // this.good = JSON.parse(this.$route.query.good)\n    this.goodId = this.$route.params.goodId;\n    this.request.get(\"/api/good/\" + this.goodId).then((res) => {\n      if (res.code === \"200\") {\n        this.good = res.data;\n        let discount = this.good.discount;\n        if (discount < 1) {\n          this.isDiscount = true;\n          this.discount = discount * 10 + \"折\";\n        }\n      } else {\n        this.$router.go(0);\n      }\n    });\n    //从服务器获取商品规格信息\n    this.request.get(\"/api/good/standard/\" + this.goodId).then((res) => {\n      if (res.code === \"200\") {\n        let standards = JSON.parse(res.data);\n        this.standards = standards;\n        //默认选择第一个标准\n        this.price = this.getPriceRange(standards);\n      } else {\n        //没有规格\n        this.price = this.good.price;\n        this.store = this.good.store;\n        this.showStore = true;\n      }\n    });\n  },\n  mounted() {},\n  computed: {\n    //折后价，小数点后2位\n    realPrice: function () {\n      if (this.good.discount < 1) {\n        //价格为范围，即不是数字，则返回一个范围\n        if (isNaN(this.price)) {\n          let down =\n            this.price.substring(0, this.price.indexOf(\"元\")) *\n            this.good.discount;\n          let up =\n            this.price.substring(this.price.lastIndexOf(\" \")) *\n            this.good.discount;\n          return down.toFixed(2) + \"元 ~ \" + up.toFixed(2);\n        } else {\n          return (this.price * this.good.discount).toFixed(2);\n        }\n      }\n      return this.price;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.main-box {\n  width: 1060px;\n  margin: 20px auto;\n  padding: 30px;\n  background-color: #ffffff;\n  overflow: hidden;\n}\n.image-box {\n  height: 420px;\n  width: 420px;\n  border: #f2f2f2 1px solid;\n  text-align: center;\n  margin-left: 80px;\n  margin-top: 30px;\n  display: inline-block;\n  overflow: hidden;\n}\n.image {\n  height: 100%;\n  width: 350px;\n}\n.detail-box {\n  width: 420px;\n  display: inline-block;\n  margin-left: 50px;\n  overflow: hidden;\n}\n.price-box {\n  background-color: #e9e9e9;\n  border-radius: 5px;\n  font: 12px/1.5 \"Microsoft Yahei\", tahoma, arial;\n  padding-bottom: 1px;\n  padding-top: 1px;\n  margin-right: 20px;\n  margin-top: 30px;\n}\n.price-box div {\n  line-height: 20px;\n  margin-left: 8px;\n  margin-bottom: 5px;\n}\n.price-box dl dt {\n  float: left;\n  font-size: 14px;\n  line-height: 20px;\n}\n.price-box dl dd {\n  font-size: 18px;\n  line-height: 20px;\n}\n.button {\n  width: 130px;\n  height: 45px;\n  background-color: #96e2e0;\n  color: #710a0a;\n}\n.standard {\n  height: 30px;\n  margin-right: 10px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}